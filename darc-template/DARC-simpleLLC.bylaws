/**
 This is a template for simple LLC structure for DARC.

 The idea is very simple:
 1. There are only two level of tokens, common stock and board members.
 2. Level-0 is the common stock, voting weight = 1, dividend weight = 1
 3. Level-1 is the board members, voting weight = 1, dividend weight = 0.
 4. All the operations needs to be voted and approved by the board members(level-1 tokens), except for the following:
    - Pay cash (dividendable)
    - Offer dividends
 --------------------------------
 Use this function by calling the following:

*/


/**
 * The function to build a simple LLC structure.
 * Make sure that the function 
 */
function buildSimpleLLC(
  L0TokenOwnerList,
  L0TokenNumberList,
  L1TokenOwnerList,
  L1TokenNumberList,
  approvalThreshold
)
{
  checkInput(L0TokenOwnerList, L0TokenNumberList, L1TokenOwnerList, L1TokenNumberList, approvalThreshold);
  deployPlugins(L0TokenOwnerList, L0TokenNumberList, L1TokenOwnerList, L1TokenNumberList, approvalThreshold);
}

// check input
function checkInput(
  L0TokenOwnerList,
  L0TokenNumberList,
  L1TokenOwnerList,
  L1TokenNumberList,
  approvalThreshold
) {

  // check input length
  if (L0TokenOwnerList.length !== L0TokenNumberList.length) {
    throw new Error('The length of L0TokenOwnerList and L0TokenNumberList should be the same.');
  }

  if (L1TokenOwnerList.length !== L1TokenNumberList.length) {
    throw new Error('The length of L1TokenOwnerList and L1TokenNumberList should be the same.');
  }

  // make sure that approvalThreshold is a number in range(0, 100)
  if (typeof approvalThreshold !== 'number') {
    throw new Error('ApprovalThreshold should be a number.');
  }
  if (approvalThreshold < 0 || approvalThreshold > 100) {
    throw new Error('ApprovalThreshold should be a number in range(0, 100).');
  }

  // make sure that token numbers are all positive and integers
  for (let i = 0; i < L0TokenNumberList.length; i++) {
    if (typeof L0TokenNumberList[i] !== 'number' || L0TokenNumberList[i] < 0 || L0TokenNumberList[i] % 1 !== 0) {
      throw new Error('The token number should be a positive integer.');
    }
  }

  for (let i = 0; i < L1TokenNumberList.length; i++) {
    if (typeof L1TokenNumberList[i] !== 'number' || L1TokenNumberList[i] < 0 || L1TokenNumberList[i] % 1 !== 0) {
      throw new Error('The token number should be a positive integer.');
    }
  }

  // make sure that all the token owners are addresses
  for (let i = 0; i < L0TokenOwnerList.length; i++) {
    if (typeof L0TokenOwnerList[i] !== 'string') {
      throw new Error('The token owner should be an address.');
    }
  }

  for (let i = 0; i < L1TokenOwnerList.length; i++) {
    if (typeof L1TokenOwnerList[i] !== 'string') {
      throw new Error('The token owner should be an address.');
    }
  }
}

// deploy plugins
function deployPlugins(
  L0TokenOwnerList,
  L0TokenNumberList,
  L1TokenOwnerList,
  L1TokenNumberList,
  approvalThreshold
) {

}